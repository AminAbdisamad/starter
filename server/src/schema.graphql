type Query {
  # Users
  user(id: ID!): User!
  users: [User]

  # Posts
  post(id: ID!): Post!
  posts: [Post!]!
}
type Mutation {
  # User
  createUser(data: CreateUserInput!): UserPayload!
  updateUser(data: UpdateUserInput): User
  deleteUser: User

  # Login
  login(email: String!, password: String!): UserPayload!
  # Post
  createPost(data: CreatePostInput): Post!
  deletePost(id: ID!): Post!
}

input CreateUserInput {
  email: String!
  name: String
  username: String!
  password: String!
}
input UpdateUserInput {
  email: String
  name: String
  username: String
  password: String
}

input CreatePostInput {
  title: String!
  content: String
  published: Boolean
}

type User {
  id: ID!
  email: String!
  password: String!
  name: String
  username: String!
  posts: [Post]
  comments: [Comment]
}
type UserPayload {
  token: String!
  user: User!
}
type Comment {
  id: ID!
  text: String!
  author: User!
  post: Post!
}
type Post {
  id: ID!
  title: String!
  content: String
  published: Boolean
  author: User
  comments: [Comment]
}
